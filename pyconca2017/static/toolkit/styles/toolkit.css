/*
 * PyCon Canada 2017
 */
html {
  box-sizing: border-box; }

*, *::after, *::before {
  box-sizing: inherit; }

@font-face {
  font-family: "WorkSans";
  font-style: normal;
  font-weight: 900;
  src: url("../fonts/WorkSans-Black.ttf") format("truetype"); }

@font-face {
  font-family: "WorkSans";
  font-style: normal;
  font-weight: 800;
  src: url("../fonts/WorkSans-ExtraBold.ttf") format("truetype"); }

@font-face {
  font-family: "WorkSans";
  font-style: normal;
  font-weight: 700;
  src: url("../fonts/WorkSans-Bold.ttf") format("truetype"); }

@font-face {
  font-family: "WorkSans";
  font-style: normal;
  font-weight: 600;
  src: url("../fonts/WorkSans-SemiBold.ttf") format("truetype"); }

@font-face {
  font-family: "WorkSans";
  font-style: normal;
  font-weight: 500;
  src: url("../fonts/WorkSans-Medium.ttf") format("truetype"); }

@font-face {
  font-family: "WorkSans";
  font-style: normal;
  font-weight: 400;
  src: url("../fonts/WorkSans-Regular.ttf") format("truetype"); }

@font-face {
  font-family: "WorkSans";
  font-style: normal;
  font-weight: 300;
  src: url("../fonts/WorkSans-Light.ttf") format("truetype"); }

@font-face {
  font-family: "WorkSans";
  font-style: normal;
  font-weight: 200;
  src: url("../fonts/WorkSans-ExtraLight.ttf") format("truetype"); }

@font-face {
  font-family: "WorkSans";
  font-style: normal;
  font-weight: 100;
  src: url("../fonts/WorkSans-Thin.ttf") format("truetype"); }

body {
  background: whitesmoke;
  color: #464646;
  display: flex;
  flex-direction: column;
  font-family: 'Work Sans', sans-serif;
  font-size: 12pt;
  margin: 0;
  min-height: 100vh;
  -webkit-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;
          text-size-adjust: 100%; }

.display {
  font-weight: normal;
  line-height: 1.1;
  margin-bottom: 0.5rem; }
  .display--one {
    font-size: 6rem; }
  .display--two {
    font-size: 5.5rem; }
  .display--three {
    font-size: 4.5rem; }
  .display--four {
    font-size: 3.5rem; }

h1,
.heading--one, h2,
.heading--two, h3,
.heading--three, h4,
.heading--four, h5,
.heading--five, h6,
.heading--six,
.heading {
  font-weight: 500;
  line-height: 1.1;
  margin-bottom: 0.5rem; }

h1,
.heading--one {
  font-size: 2.5rem; }

h2,
.heading--two {
  font-size: 2rem; }

h3,
.heading--three {
  font-size: 1.75rem; }

h4,
.heading--four {
  font-size: 1.5rem; }

h5,
.heading--five {
  font-size: 1.25rem; }

h6,
.heading--six {
  font-size: 1rem; }

a {
  color: #35aec5; }
  a:hover {
    color: #96d7e3; }

.page__wrapper {
  max-width: 967px;
  margin: 0 auto; }

.c-block-image, .c-block-text, .c-block-heading, .c-block-illustration {
  margin: 1rem 0; }
  @media screen and (min-width: 500px) {
    .c-block-image, .c-block-text, .c-block-heading, .c-block-illustration {
      margin: 10rem 0; } }

.c-block-image__wrapper {
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  position: relative;
  z-index: 1; }
  @media screen and (min-width: 500px) {
    .c-block-image__wrapper {
      background-position: right;
      background-size: 75% auto;
      height: 300px; } }

.c-block-image__content {
  padding: 1rem; }
  @media screen and (min-width: 500px) {
    .c-block-image__content {
      padding: 4rem 0;
      width: 75%; } }

.c-block-image__heading {
  color: #f06461;
  font-size: 3rem; }

.c-block-text::after {
  clear: both;
  content: '';
  display: table; }

.c-block-text__seperator-wrapper {
  float: left;
  width: 10rem; }

.c-block-text__content {
  float: left;
  padding: 0 1rem; }
  @media screen and (min-width: 500px) {
    .c-block-text__content {
      width: 30rem; } }

.c-block-text__copy {
  margin-top: 0;
  padding-top: 0; }

.c-block-text-md {
  margin: 5rem 0; }

.c-block-heading__illustration {
  height: 10rem;
  float: right; }
  .c-block-heading__illustration * {
    fill: #f06461; }

.c-block-heading__heading {
  font-size: 4rem;
  text-transform: uppercase; }

.c-block-illustration__illustration {
  height: 6rem;
  float: right; }
  .c-block-illustration__illustration * {
    fill: #f06461; }

.c-block-illustration__heading {
  font-size: 3rem;
  text-transform: uppercase; }

.c-block_branded_montreal {
  width: 100%;
  background: linear-gradient(to bottom, rgba(245, 245, 245, 0.5) 0%, whitesmoke 100%), url("../images/andrew-welch-40121.jpg") center center fixed;
  background-size: cover; }

.c-btn {
  color: #35aec5;
  display: inline-block;
  font-weight: bold;
  padding: .5em 1em;
  text-align: center;
  text-decoration: none;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  vertical-align: middle;
  white-space: nowrap; }
  .c-btn--hover, .c-btn:hover {
    color: #96d7e3;
    text-decoration: none; }
  .c-btn--primary {
    background-color: #96d7e3;
    color: #3d3d3d; }
    .c-btn--primary-hover, .c-btn--primary:hover {
      background-color: #6ec8d8;
      color: #3d3d3d; }
  .c-btn--secondary {
    background-color: #f06461;
    color: #e5e5e5; }
    .c-btn--secondary-hover, .c-btn--secondary:hover {
      background-color: #ec3632;
      color: #e5e5e5; }
  .c-btn--dark {
    background-color: #3d3d3d;
    color: #e5e5e5; }
    .c-btn--dark-hover, .c-btn--dark:hover {
      background-color: #242424;
      color: #e5e5e5; }
  .c-btn--light {
    background-color: #e5e5e5;
    color: #3d3d3d; }
    .c-btn--light-hover, .c-btn--light:hover {
      background-color: #cccccc;
      color: #3d3d3d; }

.c-foot {
  margin: 1rem 2rem; }
  .c-foot__block {
    text-align: center;
    text-transform: uppercase; }
  .c-foot__block-title {
    color: #f06461;
    font-size: 3rem;
    padding-bottom: 1rem; }
  .c-foot__sponsor-list {
    align-items: center;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-around;
    padding-bottom: 1.5rem; }
  .c-foot__sponsor-link {
    display: inline-block; }
  .c-foot__sponsor-image {
    height: 10rem;
    margin: .5rem;
    width: 10rem; }
    @media screen and (min-width: 500px) {
      .c-foot__sponsor-image {
        margin: 1rem; } }
  .c-foot__navigation {
    max-width: 1200px;
    margin-left: auto;
    margin-right: auto; }
    .c-foot__navigation::after {
      clear: both;
      content: "";
      display: block; }
  .c-foot__list {
    float: left;
    display: block;
    margin-right: 2.35765%;
    width: 100%;
    list-style: none;
    margin: 0;
    padding: 0 1rem 1rem;
    text-align: center; }
    @media screen and (min-width: 500px) {
      .c-foot__list {
        float: left;
        display: block;
        margin-right: 2.35765%;
        width: 23.23176%; }
        .c-foot__list:last-child {
          margin-right: 0; } }
    .c-foot__list:last-child {
      margin-right: 0; }
  .c-foot__item {
    padding-bottom: .5em; }
    .c-foot__item--heading {
      color: #f06461;
      padding-bottom: 1em; }
  .c-foot__link {
    color: #464646;
    text-decoration: none; }

.c-head {
  font-size: .75rem;
  margin: 1rem 2rem; }
  .c-head__wrapper {
    align-items: center;
    display: flex;
    flex-direction: row; }
  .c-head__logo-link {
    display: block;
    padding-right: 1rem;
    vertical-align: bottom; }
  .c-head__logo {
    height: 1rem; }
  .c-head__description {
    display: none;
    line-height: 1;
    margin: 0;
    vertical-align: middle; }
    @media screen and (min-width: 800px) {
      .c-head__description {
        display: block; } }
  .c-head__nav {
    display: none;
    flex-grow: 2;
    padding-right: 1rem;
    text-align: right; }
    @media screen and (min-width: 500px) {
      .c-head__nav {
        display: block; } }
  .c-head__btn-group {
    font-size: 1rem; }
    @media screen and (min-width: 500px) {
      .c-head__btn-group {
        display: block; } }

.c-hero-home {
  margin: 1rem 0; }
  .c-hero-home__wrapper {
    width: 100%;
    background: linear-gradient(to bottom, rgba(245, 245, 245, 0.5) 0%, whitesmoke 100%), url("../images/hero/pycon-2015-crowd-by-shiroyuki-orig.jpg") center center fixed;
    background-size: cover; }
  .c-hero-home__logo {
    width: 40%; }
    .c-hero-home__logo * {
      fill: #f06461 !important; }
  .c-hero-home__copy {
    color: whitesmoke;
    font-size: 2.5rem;
    position: absolute;
    top: 10rem;
    z-index: 2; }
  .c-hero-home__illustration {
    position: relative;
    right: 0;
    bottom: 0;
    width: 40%; }
    .c-hero-home__illustration * {
      fill: #96d7e3 !important; }

.c-logo {
  display: block; }
  .c-logo--full {
    width: 10rem; }
  .c-logo--short {
    width: 5rem; }

.c-nav__wrapper {
  display: block;
  list-style: none;
  margin: 0;
  padding: 0; }

.c-nav__item {
  display: inline-block;
  line-height: 1;
  vertical-align: center; }

.c-nav__link {
  color: #464646;
  margin: .5rem 1rem;
  text-decoration: none; }
  .c-nav__link:hover {
    color: #35aec5;
    text-decoration: underline; }

.c-nav__btn {
  padding: .75rem 1.25rem; }

.c-separtor {
  display: none; }
  @media screen and (min-width: 500px) {
    .c-separtor {
      display: block;
      width: 7.5rem; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
